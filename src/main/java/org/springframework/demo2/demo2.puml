@startuml
class org.springframework.demo2.factory.SimpleBeanFactory {
- List<BeanDefinition> beanDefinitions
- List<String> beanNames
- Map<String,Object> singletons
+ Object getBean(String)
+ void registerBeanDefinition(BeanDefinition)
}
interface org.springframework.demo2.resource.Resource {
}
class org.springframework.demo2.entity.BeanDefinition {
- String id
- String className
+ String getId()
+ void setId(String)
+ String getClassName()
+ void setClassName(String)
}
class org.springframework.demo2.ClassPathXmlApplicationContext {
~ BeanFactory beanFactory
~ XmlBeanDefinitionReader reader
~ Resource resource
+ Object getBean(String)
+ void registerBeanDefinition(BeanDefinition)
}
class org.springframework.demo2.reader.XmlBeanDefinitionReader {
~ BeanFactory beanFactory
+ void loadBeanDefinitions(Resource)
}
class org.springframework.demo2.exception.BeansException {
}
interface org.springframework.demo2.factory.BeanFactory {
~ Object getBean(String)
~ void registerBeanDefinition(BeanDefinition)
}
class org.springframework.demo2.resource.ClassPathXmlResource {
~ Document document
~ Element rootElement
~ Iterator<Element> elementIterator
+ boolean hasNext()
+ Object next()
}


org.springframework.demo2.factory.BeanFactory <|.. org.springframework.demo2.factory.SimpleBeanFactory
java.util.Iterator <|-- org.springframework.demo2.resource.Resource
org.springframework.demo2.factory.BeanFactory <|.. org.springframework.demo2.ClassPathXmlApplicationContext
org.springframework.demo2.factory.BeanFactory <-- org.springframework.demo2.ClassPathXmlApplicationContext
org.springframework.demo2.resource.Resource <-- org.springframework.demo2.ClassPathXmlApplicationContext
org.springframework.demo2.reader.XmlBeanDefinitionReader <-- org.springframework.demo2.ClassPathXmlApplicationContext

org.springframework.demo2.exception.Exception <|-- org.springframework.demo2.exception.BeansException
org.springframework.demo2.resource.Resource <|.. org.springframework.demo2.resource.ClassPathXmlResource
@enduml